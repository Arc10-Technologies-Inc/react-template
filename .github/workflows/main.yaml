# This is a workflow to publish the react application to the kubernetes.

name: Publish-React-App

# Controls when the workflow will run
on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [on-demand-test]

env:
  IMAGE_TAG: ${{ github.sha }}
  ECR_REPOSITORY: react-template
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  react-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Create Release
        run: |
          npm install
          npm run build

      - name: Upload build folder for next job
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./build

  docker-build:
    runs-on: ubuntu-latest
    needs: react-build
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Download artifact from the previous job
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

  deploy:
    runs-on: ubuntu-latest
    needs: [react-build, docker-build]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Deploy to kubernetes
        run: |
          kubectl config set-credentials ${{ secrets.K8S_USER }} --token=${{ secrets.K8S_TOKEN }}
          kubectl config set-cluster ${{ secrets.K8S_CTR }} --insecure-skip-tls-verify=true --server=${{ secrets.K8S_URL }}
          kubectl config set-context ${{ secrets.K8S_CTR }} --user=${{ secrets.K8S_USER }} --cluster=${{ secrets.K8S_CTR }}
          kubectl config use-context ${{ secrets.K8S_CTR }}
          kubectl apply -f ./deployment -n dev
          kubectl set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n dev
